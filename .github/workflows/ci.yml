name: Elasticsearch Behat Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIAI2VOBUYKPQFMXW6A
          aws-secret-access-key: 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
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 077428399685.dkr.ecr.us-east-1.amazonaws.com


      - name: Set up Core container
        run: |
          docker run -d --name core -p 9001:9000 077428399685.dkr.ecr.us-east-1.amazonaws.com/local-hireme-core:corev4


      - name: Set up Elasticsearch container
        run: |
          docker run -d --name elasticsearch -p 9200:9200 -e "discovery.type=single-node" -e "ELASTIC_USERNAME=elastic" -e "ELASTIC_PASSWORD=changeme" 077428399685.dkr.ecr.us-east-1.amazonaws.com/local-hireme-elasticsearch:v1.0.7
          sleep 30

      - name: running containers
        run: docker ps

      - name: Check if core container is running
        run: |
          if [[ ! $(docker ps -qf name=core) ]]; then
            echo "The 'core' container is not running."
            exit 1
          else
            echo "The 'core' container is running."
          fi


      - name: Check if elasticsearch container is running
        run: |
          if [[ ! $(docker ps -qf name=elasticsearch) ]]; then
            echo "The 'elasticsearch' container is not running."
            exit 1
          else
            echo "The 'elasticsearch' container is running."
          fi


      - name: Install core dependencies
        run: |
          docker exec core sh -c "cd /var/www && composer install"

#      - name: Stop and Remove Elasticsearch Container
#        run: |
#          docker stop elasticsearch
#          docker rm elasticsearch
#
#      - name: Cleanup Docker Resources
#        run: docker system prune -f